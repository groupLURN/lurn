NOTES:
	General
	1.	All tables with the name header has a corresponding details tables
	2.	Use the header id is the foreign of key in the details tables
	
	Incident Reports
	1.	Incident Reports also has the header-detail structure. However, its detail table has more detail types. The types along with the explanations of the values and the attribute are listed below.
		type						value																					attribute
		task						task_id in task table																	NULL
		incident_summary			summary of the whole incident															NULL
		location					location of the incident; can be the different from task location						NULL
		persons_involved			id of the person involved; id has this structure (occupation)-(id number);				NULL
										occupation will dictate which tables (Employees, Manpower) to take from
										if occupation is "Skilled Worker" or "Laborer", fetch from manpower table
										if occupation is "Employee", fetch from Employees
		item_lost					name of item lost																		quantity
		injured_summary				summary of the injury of a person involved												the same as persons_involved value
	2.	Incident Reports can only have either item_lost or injured_summary
	3.	Incident Types are a follows
		type		meaning
		acc			Accident	
		doc			Danger Occurrence
		inj			Injury 
		los			Loss





SQL CODES:
Select all Projects
    Projects.id AS 'Projects__id', Projects.client_id AS 'Projects__client_id', Projects.project_manager_id AS 'Projects__project_manager_id', Projects.title AS 'Projects__title', Projects.description AS 'Projects__description', Projects.location AS 'Projects__location', Projects.start_date AS 'Projects__start_date', Projects.end_date AS 'Projects__end_date', Projects.created AS 'Projects__created', Projects.modified AS 'Projects__modified', Projects.is_finished AS 'Projects__is_finished', Projects.phase AS 'Projects__phase' FROM projects Projects

Get Project Status
    SELECT (
        IF(
            CURDATE() < Projects.'start_date',
            'Planning Phase',
            IF(
                SUM(IF(Tasks.'is_finished' =  1, 1, 0)) = COUNT(Tasks.'id') AND
                COUNT(Tasks.id) > 0 AND
                CURDATE() > DATE_ADD(Projects.'end_date', INTERVAL 1 YEAR),
                'Closed',
                IF(
                    SUM(IF(Tasks.'is_finished' =  1, 1, 0)) = COUNT(Tasks.'id') AND
                    COUNT(Tasks.id) > 0,
                    'Completed',
                        IF(
                            SUM(IF(Tasks.'is_finished' =  0 AND CURDATE() > Tasks.'end_date', 1, 0)) > 0,
                            'Delayed',
                            'Ongoing'
                        )
                )
            )
        )) AS 'status', Projects.id AS 'Projects__id', Projects.client_id AS 'Projects__client_id', Projects.project_manager_id AS 'Projects__project_manager_id', Projects.title AS 'Projects__title', Projects.description AS 'Projects__description', Projects.location AS 'Projects__location', Projects.start_date AS 'Projects__start_date', Projects.end_date AS 'Projects__end_date', Projects.created AS 'Projects__created', Projects.modified AS 'Projects__modified', Projects.is_finished AS 'Projects__is_finished', Projects.phase AS 'Projects__phase' FROM projects Projects LEFT JOIN milestones Milestones ON Projects.id = (Milestones.project_id) LEFT JOIN tasks Tasks ON Milestones.id = (Tasks.milestone_id) WHERE Projects.id = #id here# GROUP BY Projects.id  LIMIT 1

Find By Project Id
    SELECT Projects.id AS 'Projects__id', Projects.client_id AS 'Projects__client_id', Projects.project_manager_id AS 'Projects__project_manager_id', Projects.title AS 'Projects__title', Projects.description AS 'Projects__description', Projects.location AS 'Projects__location', Projects.start_date AS 'Projects__start_date', Projects.end_date AS 'Projects__end_date', Projects.created AS 'Projects__created', Projects.modified AS 'Projects__modified', Projects.is_finished AS 'Projects__is_finished', Projects.phase AS 'Projects__phase', Clients.id AS 'Clients__id', Clients.user_id AS 'Clients__user_id', Clients.company_name AS 'Clients__company_name', Clients.key_person AS 'Clients__key_person', Clients.contact_number AS 'Clients__contact_number', Clients.email AS 'Clients__email', Clients.address AS 'Clients__address', Clients.created AS 'Clients__created', Clients.modified AS 'Clients__modified', Employees.id AS 'Employees__id', Employees.user_id AS 'Employees__user_id', Employees.employee_type_id AS 'Employees__employee_type_id', Employees.name AS 'Employees__name', Employees.employment_date AS 'Employees__employment_date', Employees.termination_date AS 'Employees__termination_date', Employees.created AS 'Employees__created', Employees.modified AS 'Employees__modified', Employees.address AS 'Employees__address', Employees.age AS 'Employees__age', Employees.contact_number AS 'Employees__contact_number', ProjectPhases.id AS 'ProjectPhases__id', ProjectPhases.name AS 'ProjectPhases__name' FROM projects Projects LEFT JOIN clients Clients ON Clients.id = (Projects.client_id) LEFT JOIN employees Employees ON Employees.id = (Projects.project_manager_id) INNER JOIN project_phases ProjectPhases ON ProjectPhases.id = (Projects.phase) WHERE Projects.id = #id here#

Select All Resource Request Headers
    SELECT ResourceRequestHeaders.id AS 'ResourceRequestHeaders__id', ResourceRequestHeaders.from_project_id AS 'ResourceRequestHeaders__from_project_id', ResourceRequestHeaders.to_project_id AS 'ResourceRequestHeaders__to_project_id', ResourceRequestHeaders.required_date AS 'ResourceRequestHeaders__required_date', ResourceRequestHeaders.created AS 'ResourceRequestHeaders__created', ResourceRequestHeaders.modified AS 'ResourceRequestHeaders__modified', ProjectFrom.id AS 'ProjectFrom__id', ProjectFrom.client_id AS 'ProjectFrom__client_id', ProjectFrom.project_manager_id AS 'ProjectFrom__project_manager_id', ProjectFrom.title AS 'ProjectFrom__title', ProjectFrom.description AS 'ProjectFrom__description', ProjectFrom.location AS 'ProjectFrom__location', ProjectFrom.start_date AS 'ProjectFrom__start_date', ProjectFrom.end_date AS 'ProjectFrom__end_date', ProjectFrom.created AS 'ProjectFrom__created', ProjectFrom.modified AS 'ProjectFrom__modified', ProjectFrom.is_finished AS 'ProjectFrom__is_finished', ProjectFrom.phase AS 'ProjectFrom__phase', ProjectTo.id AS 'ProjectTo__id', ProjectTo.client_id AS 'ProjectTo__client_id', ProjectTo.project_manager_id AS 'ProjectTo__project_manager_id', ProjectTo.title AS 'ProjectTo__title', ProjectTo.description AS 'ProjectTo__description', ProjectTo.location AS 'ProjectTo__location', ProjectTo.start_date AS 'ProjectTo__start_date', ProjectTo.end_date AS 'ProjectTo__end_date', ProjectTo.created AS 'ProjectTo__created', ProjectTo.modified AS 'ProjectTo__modified', ProjectTo.is_finished AS 'ProjectTo__is_finished', ProjectTo.phase AS 'ProjectTo__phase' FROM resource_request_headers ResourceRequestHeaders LEFT JOIN projects ProjectFrom ON ProjectFrom.id = (ResourceRequestHeaders.from_project_id) LEFT JOIN projects ProjectTo ON ProjectTo.id = (ResourceRequestHeaders.to_project_id) LIMIT 20 OFFSET 0
    
Find By Resource Request Header Id
    SELECT ResourceRequestHeaders.id AS 'ResourceRequestHeaders__id', ResourceRequestHeaders.from_project_id AS 'ResourceRequestHeaders__from_project_id', ResourceRequestHeaders.to_project_id AS 'ResourceRequestHeaders__to_project_id', ResourceRequestHeaders.required_date AS 'ResourceRequestHeaders__required_date', ResourceRequestHeaders.created AS 'ResourceRequestHeaders__created', ResourceRequestHeaders.modified AS 'ResourceRequestHeaders__modified', ProjectFrom.id AS 'ProjectFrom__id', ProjectFrom.client_id AS 'ProjectFrom__client_id', ProjectFrom.project_manager_id AS 'ProjectFrom__project_manager_id', ProjectFrom.title AS 'ProjectFrom__title', ProjectFrom.description AS 'ProjectFrom__description', ProjectFrom.location AS 'ProjectFrom__location', ProjectFrom.start_date AS 'ProjectFrom__start_date', ProjectFrom.end_date AS 'ProjectFrom__end_date', ProjectFrom.created AS 'ProjectFrom__created', ProjectFrom.modified AS 'ProjectFrom__modified', ProjectFrom.is_finished AS 'ProjectFrom__is_finished', ProjectFrom.phase AS 'ProjectFrom__phase', ProjectTo.id AS 'ProjectTo__id', ProjectTo.client_id AS 'ProjectTo__client_id', ProjectTo.project_manager_id AS 'ProjectTo__project_manager_id', ProjectTo.title AS 'ProjectTo__title', ProjectTo.description AS 'ProjectTo__description', ProjectTo.location AS 'ProjectTo__location', ProjectTo.start_date AS 'ProjectTo__start_date', ProjectTo.end_date AS 'ProjectTo__end_date', ProjectTo.created AS 'ProjectTo__created', ProjectTo.modified AS 'ProjectTo__modified', ProjectTo.is_finished AS 'ProjectTo__is_finished', ProjectTo.phase AS 'ProjectTo__phase' FROM resource_request_headers ResourceRequestHeaders LEFT JOIN projects ProjectFrom ON ProjectFrom.id = (ResourceRequestHeaders.from_project_id) LEFT JOIN projects ProjectTo ON ProjectTo.id = (ResourceRequestHeaders.to_project_id) WHERE ResourceRequestHeaders.id = #id here#
    
Select All Resource Transfer Headers
    SELECT ResourceTransferHeaders.id AS 'ResourceTransferHeaders__id', ResourceTransferHeaders.resource_request_header_id AS 'ResourceTransferHeaders__resource_request_header_id', ResourceTransferHeaders.from_project_id AS 'ResourceTransferHeaders__from_project_id', ResourceTransferHeaders.to_project_id AS 'ResourceTransferHeaders__to_project_id', ResourceTransferHeaders.created AS 'ResourceTransferHeaders__created', ResourceTransferHeaders.modified AS 'ResourceTransferHeaders__modified', ResourceRequestHeaders.id AS 'ResourceRequestHeaders__id', ResourceRequestHeaders.from_project_id AS 'ResourceRequestHeaders__from_project_id', ResourceRequestHeaders.to_project_id AS 'ResourceRequestHeaders__to_project_id', ResourceRequestHeaders.required_date AS 'ResourceRequestHeaders__required_date', ResourceRequestHeaders.created AS 'ResourceRequestHeaders__created', ResourceRequestHeaders.modified AS 'ResourceRequestHeaders__modified', ProjectTo.id AS 'ProjectTo__id', ProjectTo.client_id AS 'ProjectTo__client_id', ProjectTo.project_manager_id AS 'ProjectTo__project_manager_id', ProjectTo.title AS 'ProjectTo__title', ProjectTo.description AS 'ProjectTo__description', ProjectTo.location AS 'ProjectTo__location', ProjectTo.start_date AS 'ProjectTo__start_date', ProjectTo.end_date AS 'ProjectTo__end_date', ProjectTo.created AS 'ProjectTo__created', ProjectTo.modified AS 'ProjectTo__modified', ProjectTo.is_finished AS 'ProjectTo__is_finished', ProjectTo.phase AS 'ProjectTo__phase', ProjectFrom.id AS 'ProjectFrom__id', ProjectFrom.client_id AS 'ProjectFrom__client_id', ProjectFrom.project_manager_id AS 'ProjectFrom__project_manager_id', ProjectFrom.title AS 'ProjectFrom__title', ProjectFrom.description AS 'ProjectFrom__description', ProjectFrom.location AS 'ProjectFrom__location', ProjectFrom.start_date AS 'ProjectFrom__start_date', ProjectFrom.end_date AS 'ProjectFrom__end_date', ProjectFrom.created AS 'ProjectFrom__created', ProjectFrom.modified AS 'ProjectFrom__modified', ProjectFrom.is_finished AS 'ProjectFrom__is_finished', ProjectFrom.phase AS 'ProjectFrom__phase' FROM resource_transfer_headers ResourceTransferHeaders INNER JOIN resource_request_headers ResourceRequestHeaders ON ResourceRequestHeaders.id = (ResourceTransferHeaders.resource_request_header_id) LEFT JOIN projects ProjectTo ON ProjectTo.id = (ResourceTransferHeaders.to_project_id) LEFT JOIN projects ProjectFrom ON ProjectFrom.id = (ResourceTransferHeaders.from_project_id) LIMIT 20 OFFSET 0
    
Find By Resource Transfer Header Id
    SELECT ResourceTransferHeaders.id AS 'ResourceTransferHeaders__id', ResourceTransferHeaders.resource_request_header_id AS 'ResourceTransferHeaders__resource_request_header_id', ResourceTransferHeaders.from_project_id AS 'ResourceTransferHeaders__from_project_id', ResourceTransferHeaders.to_project_id AS 'ResourceTransferHeaders__to_project_id', ResourceTransferHeaders.created AS 'ResourceTransferHeaders__created', ResourceTransferHeaders.modified AS 'ResourceTransferHeaders__modified', ResourceRequestHeaders.id AS 'ResourceRequestHeaders__id', ResourceRequestHeaders.from_project_id AS 'ResourceRequestHeaders__from_project_id', ResourceRequestHeaders.to_project_id AS 'ResourceRequestHeaders__to_project_id', ResourceRequestHeaders.required_date AS 'ResourceRequestHeaders__required_date', ResourceRequestHeaders.created AS 'ResourceRequestHeaders__created', ResourceRequestHeaders.modified AS 'ResourceRequestHeaders__modified', ProjectFrom.id AS 'ProjectFrom__id', ProjectFrom.client_id AS 'ProjectFrom__client_id', ProjectFrom.project_manager_id AS 'ProjectFrom__project_manager_id', ProjectFrom.title AS 'ProjectFrom__title', ProjectFrom.description AS 'ProjectFrom__description', ProjectFrom.location AS 'ProjectFrom__location', ProjectFrom.start_date AS 'ProjectFrom__start_date', ProjectFrom.end_date AS 'ProjectFrom__end_date', ProjectFrom.created AS 'ProjectFrom__created', ProjectFrom.modified AS 'ProjectFrom__modified', ProjectFrom.is_finished AS 'ProjectFrom__is_finished', ProjectFrom.phase AS 'ProjectFrom__phase', ProjectTo.id AS 'ProjectTo__id', ProjectTo.client_id AS 'ProjectTo__client_id', ProjectTo.project_manager_id AS 'ProjectTo__project_manager_id', ProjectTo.title AS 'ProjectTo__title', ProjectTo.description AS 'ProjectTo__description', ProjectTo.location AS 'ProjectTo__location', ProjectTo.start_date AS 'ProjectTo__start_date', ProjectTo.end_date AS 'ProjectTo__end_date', ProjectTo.created AS 'ProjectTo__created', ProjectTo.modified AS 'ProjectTo__modified', ProjectTo.is_finished AS 'ProjectTo__is_finished', ProjectTo.phase AS 'ProjectTo__phase' FROM resource_transfer_headers ResourceTransferHeaders INNER JOIN resource_request_headers ResourceRequestHeaders ON ResourceRequestHeaders.id = (ResourceTransferHeaders.resource_request_header_id) LEFT JOIN projects ProjectFrom ON ProjectFrom.id = (ResourceTransferHeaders.from_project_id) LEFT JOIN projects ProjectTo ON ProjectTo.id = (ResourceTransferHeaders.to_project_id) WHERE ResourceTransferHeaders.id = #id here#
    
Select All Purchase Orders
    SELECT PurchaseOrderHeaders.id AS 'PurchaseOrderHeaders__id', PurchaseOrderHeaders.project_id AS 'PurchaseOrderHeaders__project_id', PurchaseOrderHeaders.supplier_id AS 'PurchaseOrderHeaders__supplier_id', PurchaseOrderHeaders.created AS 'PurchaseOrderHeaders__created', PurchaseOrderHeaders.modified AS 'PurchaseOrderHeaders__modified', Projects.id AS 'Projects__id', Projects.client_id AS 'Projects__client_id', Projects.project_manager_id AS 'Projects__project_manager_id', Projects.title AS 'Projects__title', Projects.description AS 'Projects__description', Projects.location AS 'Projects__location', Projects.start_date AS 'Projects__start_date', Projects.end_date AS 'Projects__end_date', Projects.created AS 'Projects__created', Projects.modified AS 'Projects__modified', Projects.is_finished AS 'Projects__is_finished', Projects.phase AS 'Projects__phase', Suppliers.id AS 'Suppliers__id', Suppliers.name AS 'Suppliers__name', Suppliers.contact_number AS 'Suppliers__contact_number', Suppliers.email AS 'Suppliers__email', Suppliers.address AS 'Suppliers__address', Suppliers.created AS 'Suppliers__created', Suppliers.modified AS 'Suppliers__modified' FROM purchase_order_headers PurchaseOrderHeaders LEFT JOIN projects Projects ON Projects.id = (PurchaseOrderHeaders.project_id) INNER JOIN suppliers Suppliers ON Suppliers.id = (PurchaseOrderHeaders.supplier_id) LIMIT 20 OFFSET 0
    
Find By Purchase Order Id
    SELECT PurchaseOrderHeaders.id AS 'PurchaseOrderHeaders__id', PurchaseOrderHeaders.project_id AS 'PurchaseOrderHeaders__project_id', PurchaseOrderHeaders.supplier_id AS 'PurchaseOrderHeaders__supplier_id', PurchaseOrderHeaders.created AS 'PurchaseOrderHeaders__created', PurchaseOrderHeaders.modified AS 'PurchaseOrderHeaders__modified', Projects.id AS 'Projects__id', Projects.client_id AS 'Projects__client_id', Projects.project_manager_id AS 'Projects__project_manager_id', Projects.title AS 'Projects__title', Projects.description AS 'Projects__description', Projects.location AS 'Projects__location', Projects.start_date AS 'Projects__start_date', Projects.end_date AS 'Projects__end_date', Projects.created AS 'Projects__created', Projects.modified AS 'Projects__modified', Projects.is_finished AS 'Projects__is_finished', Projects.phase AS 'Projects__phase', Suppliers.id AS 'Suppliers__id', Suppliers.name AS 'Suppliers__name', Suppliers.contact_number AS 'Suppliers__contact_number', Suppliers.email AS 'Suppliers__email', Suppliers.address AS 'Suppliers__address', Suppliers.created AS 'Suppliers__created', Suppliers.modified AS 'Suppliers__modified' FROM purchase_order_headers PurchaseOrderHeaders LEFT JOIN projects Projects ON Projects.id = (PurchaseOrderHeaders.project_id) INNER JOIN suppliers Suppliers ON Suppliers.id = (PurchaseOrderHeaders.supplier_id) WHERE PurchaseOrderHeaders.id = #id here#

Select All Purchase Receive
    SELECT PurchaseReceiveHeaders.id AS 'PurchaseReceiveHeaders__id', PurchaseReceiveHeaders.received_date AS 'PurchaseReceiveHeaders__received_date', PurchaseReceiveHeaders.created AS 'PurchaseReceiveHeaders__created', PurchaseReceiveHeaders.modified AS 'PurchaseReceiveHeaders__modified', PurchaseReceiveDetails.id AS 'PurchaseReceiveDetails__id', PurchaseReceiveDetails.purchase_receive_header_id AS 'PurchaseReceiveDetails__purchase_receive_header_id', PurchaseReceiveDetails.purchase_order_detail_id AS 'PurchaseReceiveDetails__purchase_order_detail_id', PurchaseReceiveDetails.quantity AS 'PurchaseReceiveDetails__quantity', PurchaseReceiveDetails.created AS 'PurchaseReceiveDetails__created', PurchaseReceiveDetails.modified AS 'PurchaseReceiveDetails__modified', PurchaseOrderDetails.id AS 'PurchaseOrderDetails__id', PurchaseOrderDetails.purchase_order_header_id AS 'PurchaseOrderDetails__purchase_order_header_id', PurchaseOrderDetails.material_id AS 'PurchaseOrderDetails__material_id', PurchaseOrderDetails.quantity AS 'PurchaseOrderDetails__quantity', PurchaseOrderDetails.created AS 'PurchaseOrderDetails__created', PurchaseOrderDetails.modified AS 'PurchaseOrderDetails__modified', PurchaseOrderHeaders.id AS 'PurchaseOrderHeaders__id', PurchaseOrderHeaders.project_id AS 'PurchaseOrderHeaders__project_id', PurchaseOrderHeaders.supplier_id AS 'PurchaseOrderHeaders__supplier_id', PurchaseOrderHeaders.created AS 'PurchaseOrderHeaders__created', PurchaseOrderHeaders.modified AS 'PurchaseOrderHeaders__modified', Projects.id AS 'Projects__id', Projects.client_id AS 'Projects__client_id', Projects.project_manager_id AS 'Projects__project_manager_id', Projects.title AS 'Projects__title', Projects.description AS 'Projects__description', Projects.location AS 'Projects__location', Projects.start_date AS 'Projects__start_date', Projects.end_date AS 'Projects__end_date', Projects.created AS 'Projects__created', Projects.modified AS 'Projects__modified', Projects.is_finished AS 'Projects__is_finished', Projects.phase AS 'Projects__phase', Suppliers.id AS 'Suppliers__id', Suppliers.name AS 'Suppliers__name', Suppliers.contact_number AS 'Suppliers__contact_number', Suppliers.email AS 'Suppliers__email', Suppliers.address AS 'Suppliers__address', Suppliers.created AS 'Suppliers__created', Suppliers.modified AS 'Suppliers__modified' FROM purchase_receive_headers PurchaseReceiveHeaders INNER JOIN purchase_receive_details PurchaseReceiveDetails ON PurchaseReceiveHeaders.id = (PurchaseReceiveDetails.purchase_receive_header_id) INNER JOIN purchase_order_details PurchaseOrderDetails ON PurchaseOrderDetails.id = (PurchaseReceiveDetails.purchase_order_detail_id) INNER JOIN purchase_order_headers PurchaseOrderHeaders ON PurchaseOrderHeaders.id = (PurchaseOrderDetails.purchase_order_header_id) LEFT JOIN projects Projects ON Projects.id = (PurchaseOrderHeaders.project_id) INNER JOIN suppliers Suppliers ON Suppliers.id = (PurchaseOrderHeaders.supplier_id) GROUP BY PurchaseReceiveHeaders.id  LIMIT 20 OFFSET 0
    
Find By Purchase Receive Id
    SELECT PurchaseReceiveHeaders.id AS 'PurchaseReceiveHeaders__id', PurchaseReceiveHeaders.received_date AS 'PurchaseReceiveHeaders__received_date', PurchaseReceiveHeaders.created AS 'PurchaseReceiveHeaders__created', PurchaseReceiveHeaders.modified AS 'PurchaseReceiveHeaders__modified' FROM purchase_receive_headers PurchaseReceiveHeaders WHERE id = #id here#
    
Select All Rental Request
	SELECT RentalRequestHeaders.id AS 'RentalRequestHeaders__id', RentalRequestHeaders.project_id AS 'RentalRequestHeaders__project_id', RentalRequestHeaders.supplier_id AS 'RentalRequestHeaders__supplier_id', RentalRequestHeaders.created AS 'RentalRequestHeaders__created', RentalRequestHeaders.modified AS 'RentalRequestHeaders__modified', Projects.id AS 'Projects__id', Projects.client_id AS 'Projects__client_id', Projects.project_manager_id AS 'Projects__project_manager_id', Projects.title AS 'Projects__title', Projects.description AS 'Projects__description', Projects.location AS 'Projects__location', Projects.start_date AS 'Projects__start_date', Projects.end_date AS 'Projects__end_date', Projects.created AS 'Projects__created', Projects.modified AS 'Projects__modified', Projects.is_finished AS 'Projects__is_finished', Projects.phase AS 'Projects__phase', Suppliers.id AS 'Suppliers__id', Suppliers.name AS 'Suppliers__name', Suppliers.contact_number AS 'Suppliers__contact_number', Suppliers.email AS 'Suppliers__email', Suppliers.address AS 'Suppliers__address', Suppliers.created AS 'Suppliers__created', Suppliers.modified AS 'Suppliers__modified' FROM rental_request_headers RentalRequestHeaders LEFT JOIN projects Projects ON Projects.id = (RentalRequestHeaders.project_id) INNER JOIN suppliers Suppliers ON Suppliers.id = (RentalRequestHeaders.supplier_id) LIMIT 20 OFFSET 0

Find By Rental Request Id
	SELECT RentalRequestHeaders.id AS 'RentalRequestHeaders__id', RentalRequestHeaders.project_id AS 'RentalRequestHeaders__project_id', RentalRequestHeaders.supplier_id AS 'RentalRequestHeaders__supplier_id', RentalRequestHeaders.created AS 'RentalRequestHeaders__created', RentalRequestHeaders.modified AS 'RentalRequestHeaders__modified', Projects.id AS 'Projects__id', Projects.client_id AS 'Projects__client_id', Projects.project_manager_id AS 'Projects__project_manager_id', Projects.title AS 'Projects__title', Projects.description AS 'Projects__description', Projects.location AS 'Projects__location', Projects.start_date AS 'Projects__start_date', Projects.end_date AS 'Projects__end_date', Projects.created AS 'Projects__created', Projects.modified AS 'Projects__modified', Projects.is_finished AS 'Projects__is_finished', Projects.phase AS 'Projects__phase', Suppliers.id AS 'Suppliers__id', Suppliers.name AS 'Suppliers__name', Suppliers.contact_number AS 'Suppliers__contact_number', Suppliers.email AS 'Suppliers__email', Suppliers.address AS 'Suppliers__address', Suppliers.created AS 'Suppliers__created', Suppliers.modified AS 'Suppliers__modified' FROM rental_request_headers RentalRequestHeaders LEFT JOIN projects Projects ON Projects.id = (RentalRequestHeaders.project_id) INNER JOIN suppliers Suppliers ON Suppliers.id = (RentalRequestHeaders.supplier_id) WHERE RentalRequestHeaders.id = #id here#

Select All Rental Receive
	SELECT RentalReceiveHeaders.id AS 'RentalReceiveHeaders__id', RentalReceiveHeaders.receive_date AS 'RentalReceiveHeaders__receive_date', RentalReceiveHeaders.created AS 'RentalReceiveHeaders__created', RentalReceiveHeaders.modified AS 'RentalReceiveHeaders__modified', RentalReceiveDetails.id AS 'RentalReceiveDetails__id', RentalReceiveDetails.rental_receive_header_id AS 'RentalReceiveDetails__rental_receive_header_id', RentalReceiveDetails.rental_request_detail_id AS 'RentalReceiveDetails__rental_request_detail_id', RentalReceiveDetails.quantity AS 'RentalReceiveDetails__quantity', RentalReceiveDetails.start_date AS 'RentalReceiveDetails__start_date', RentalReceiveDetails.end_date AS 'RentalReceiveDetails__end_date', RentalReceiveDetails.created AS 'RentalReceiveDetails__created', RentalReceiveDetails.modified AS 'RentalReceiveDetails__modified', RentalRequestDetails.id AS 'RentalRequestDetails__id', RentalRequestDetails.rental_request_header_id AS 'RentalRequestDetails__rental_request_header_id', RentalRequestDetails.equipment_id AS 'RentalRequestDetails__equipment_id', RentalRequestDetails.quantity AS 'RentalRequestDetails__quantity', RentalRequestDetails.duration AS 'RentalRequestDetails__duration', RentalRequestDetails.created AS 'RentalRequestDetails__created', RentalRequestDetails.modified AS 'RentalRequestDetails__modified', RentalRequestHeaders.id AS 'RentalRequestHeaders__id', RentalRequestHeaders.project_id AS 'RentalRequestHeaders__project_id', RentalRequestHeaders.supplier_id AS 'RentalRequestHeaders__supplier_id', RentalRequestHeaders.created AS 'RentalRequestHeaders__created', RentalRequestHeaders.modified AS 'RentalRequestHeaders__modified', Projects.id AS 'Projects__id', Projects.client_id AS 'Projects__client_id', Projects.project_manager_id AS 'Projects__project_manager_id', Projects.title AS 'Projects__title', Projects.description AS 'Projects__description', Projects.location AS 'Projects__location', Projects.start_date AS 'Projects__start_date', Projects.end_date AS 'Projects__end_date', Projects.created AS 'Projects__created', Projects.modified AS 'Projects__modified', Projects.is_finished AS 'Projects__is_finished', Projects.phase AS 'Projects__phase', Suppliers.id AS 'Suppliers__id', Suppliers.name AS 'Suppliers__name', Suppliers.contact_number AS 'Suppliers__contact_number', Suppliers.email AS 'Suppliers__email', Suppliers.address AS 'Suppliers__address', Suppliers.created AS 'Suppliers__created', Suppliers.modified AS 'Suppliers__modified' FROM rental_receive_headers RentalReceiveHeaders INNER JOIN rental_receive_details RentalReceiveDetails ON RentalReceiveHeaders.id = (RentalReceiveDetails.rental_receive_header_id) INNER JOIN rental_request_details RentalRequestDetails ON RentalRequestDetails.id = (RentalReceiveDetails.rental_request_detail_id) INNER JOIN rental_request_headers RentalRequestHeaders ON RentalRequestHeaders.id = (RentalRequestDetails.rental_request_header_id) LEFT JOIN projects Projects ON Projects.id = (RentalRequestHeaders.project_id) INNER JOIN suppliers Suppliers ON Suppliers.id = (RentalRequestHeaders.supplier_id) GROUP BY RentalReceiveHeaders.id  LIMIT 20 OFFSET 0
	
Find By Rental Receive Header Id
	SELECT RentalReceiveHeaders.id AS 'RentalReceiveHeaders__id', RentalReceiveHeaders.receive_date AS 'RentalReceiveHeaders__receive_date', RentalReceiveHeaders.created AS 'RentalReceiveHeaders__created', RentalReceiveHeaders.modified AS 'RentalReceiveHeaders__modified' FROM rental_receive_headers RentalReceiveHeaders WHERE id = #id here#
	*note fetch Receive Header details using Rental Receive Header Id

General Equipment Inventory Report
	SELECT Equipment.id AS 'Equipment__id', Equipment.name AS 'Equipment__name', EquipmentInventories.modified AS 'last_modified', (SUM((CASE WHEN ((EquipmentInventories.project_id) IS NULL AND (EquipmentInventories.rental_receive_detail_id) IS NULL) THEN 1 END))) AS 'available_in_house_quantity', (SUM((CASE WHEN ((EquipmentInventories.project_id) IS NULL AND (EquipmentInventories.rental_receive_detail_id) IS NOT NULL AND (RentalReceiveDetails.id) IS NOT NULL) THEN 1 END))) AS 'available_rented_quantity', (SUM((CASE WHEN ((EquipmentInventories.project_id) IS NOT NULL AND (EquipmentInventories.rental_receive_detail_id) IS NULL) THEN 1 END))) AS 'unavailable_in_house_quantity', (SUM((CASE WHEN ((EquipmentInventories.project_id) IS NOT NULL AND (EquipmentInventories.rental_receive_detail_id) IS NOT NULL AND (RentalReceiveDetails.id) IS NOT NULL) THEN 1 END))) AS 'unavailable_rented_quantity', (SUM((CASE WHEN ((EquipmentInventories.rental_receive_detail_id) IS NULL OR ((EquipmentInventories.rental_receive_detail_id) IS NOT NULL AND (RentalReceiveDetails.id) IS NOT NULL)) THEN 1 END))) AS 'total_quantity', EquipmentInventories.project_id AS 'project_id' FROM equipment Equipment LEFT JOIN equipment_inventories EquipmentInventories ON Equipment.id = (EquipmentInventories.equipment_id) LEFT JOIN rental_receive_details RentalReceiveDetails ON (RentalReceiveDetails.end_date >= CURDATE() AND RentalReceiveDetails.id = (EquipmentInventories.rental_receive_detail_id)) GROUP BY Equipment.id

General Materials Inventory Report
	SELECT Materials.id AS 'Materials__id', Materials.name AS 'Materials__name', Materials.unit_measure AS 'Materials__unit_measure', MaterialsGeneralInventories.modified AS 'last_modified', (COALESCE(MaterialsGeneralInventories.quantity, 1)) AS 'available_quantity', (SUM(COALESCE(MaterialsProjectInventories.quantity, 0)) + SUM(COALESCE(MaterialsTaskInventories.quantity, 0))) AS 'unavailable_quantity', (COALESCE(MaterialsGeneralInventories.quantity, 0) + SUM(COALESCE(MaterialsProjectInventories.quantity, 0)) + SUM(COALESCE(MaterialsTaskInventories.quantity, 0))) AS 'total_quantity' FROM materials Materials LEFT JOIN materials_general_inventories MaterialsGeneralInventories ON MaterialsGeneralInventories.material_id = Materials.id LEFT JOIN materials_project_inventories MaterialsProjectInventories ON MaterialsProjectInventories.material_id = Materials.id LEFT JOIN materials_task_inventories MaterialsTaskInventories ON MaterialsTaskInventories.material_id = Materials.id LEFT JOIN projects Projects ON Projects.id = MaterialsProjectInventories.project_id GROUP BY Materials.id
	
General Manpower Inventory Report
	SELECT ManpowerTypes.id AS 'ManpowerTypes__id', ManpowerTypes.title AS 'ManpowerTypes__title', Manpower.modified AS 'last_modified', (SUM((CASE WHEN (Manpower.project_id) IS NULL THEN 1 END))) AS 'available_quantity', (SUM((CASE WHEN (Manpower.project_id) IS NOT NULL THEN 1 END))) AS 'unavailable_quantity', (COUNT(Manpower.id)) AS 'total_quantity' FROM manpower Manpower INNER JOIN manpower_types ManpowerTypes ON ManpowerTypes.id = (Manpower.manpower_type_id) GROUP BY ManpowerTypes.id

Project Equipment Inventory Report
	SELECT Equipment.id AS 'Equipment__id', Equipment.name AS 'Equipment__name', EquipmentInventories.modified AS 'last_modified', (SUM((CASE WHEN ((EquipmentInventories.task_id) IS NULL AND (EquipmentInventories.rental_receive_detail_id) IS NULL) THEN 1 END))) AS 'available_in_house_quantity', (SUM((CASE WHEN ((EquipmentInventories.task_id) IS NULL AND (EquipmentInventories.rental_receive_detail_id) IS NOT NULL AND (RentalReceiveDetails.id) IS NOT NULL) THEN 1 END))) AS 'available_rented_quantity', (SUM((CASE WHEN ((EquipmentInventories.task_id) IS NOT NULL AND (EquipmentInventories.rental_receive_detail_id) IS NULL) THEN 1 END))) AS 'unavailable_in_house_quantity', (SUM((CASE WHEN ((EquipmentInventories.task_id) IS NOT NULL AND (EquipmentInventories.rental_receive_detail_id) IS NOT NULL AND (RentalReceiveDetails.id) IS NOT NULL) THEN 1 END))) AS 'unavailable_rented_quantity', (SUM((CASE WHEN ((EquipmentInventories.rental_receive_detail_id) IS NULL OR ((EquipmentInventories.rental_receive_detail_id) IS NOT NULL AND (RentalReceiveDetails.id) IS NOT NULL)) THEN 1 END))) AS 'total_quantity' FROM equipment_inventories EquipmentInventories LEFT JOIN rental_receive_details RentalReceiveDetails ON (RentalReceiveDetails.end_date >= CURDATE() AND RentalReceiveDetails.id = (EquipmentInventories.rental_receive_detail_id)) INNER JOIN equipment Equipment ON Equipment.id = (EquipmentInventories.equipment_id) WHERE (project_id = 1 AND EquipmentInventories.project_id = 1) GROUP BY Equipment.id

Project Materials Inventory Report
	SELECT Materials.id AS 'Materials__id', Materials.name AS 'Materials__name', Materials.unit_measure AS 'Materials__unit_measure', MaterialsProjectInventories.modified AS 'last_modified', (COALESCE(MaterialsProjectInventories.quantity, 1)) AS 'available_quantity', (SUM(COALESCE(MaterialsTaskInventories.quantity, 0))) AS 'unavailable_quantity', (COALESCE(MaterialsProjectInventories.quantity, 0) + SUM(COALESCE(MaterialsTaskInventories.quantity, 0))) AS 'total_quantity' FROM materials Materials INNER JOIN materials_project_inventories MaterialsProjectInventories ON (MaterialsProjectInventories.material_id = Materials.id AND MaterialsProjectInventories.project_id = 1) LEFT JOIN materials_task_inventories MaterialsTaskInventories ON (MaterialsTaskInventories.material_id = Materials.id AND MaterialsTaskInventories.project_id = 1) LEFT JOIN projects Projects ON Projects.id = MaterialsProjectInventories.project_id WHERE Projects.id = 1 GROUP BY MaterialsProjectInventories.project_id, Materials.id

Project Manpower Inventory Report
	SELECT ManpowerTypes.id AS 'ManpowerTypes__id', ManpowerTypes.title AS 'ManpowerTypes__title', Manpower.modified AS 'last_modified', (SUM((CASE WHEN ((Manpower.project_id) IS NOT NULL AND (Manpower.task_id) IS NULL) THEN 1 END))) AS 'available_quantity', (SUM((CASE WHEN ((Manpower.project_id) IS NOT NULL AND (Manpower.task_id) IS NOT NULL) THEN 1 END))) AS 'unavailable_quantity', (COUNT(Manpower.id)) AS 'total_quantity' FROM manpower Manpower INNER JOIN manpower_types ManpowerTypes ON ManpowerTypes.id = (Manpower.manpower_type_id) WHERE (project_id = 1 AND Manpower.project_id = 1) GROUP BY ManpowerTypes.id

Equipment Summary Report
	SELECT EquipmentInventories.id AS 'EquipmentInventories__id', EquipmentInventories.project_id AS 'EquipmentInventories__project_id', EquipmentInventories.task_id AS 'EquipmentInventories__task_id', EquipmentInventories.equipment_id AS 'EquipmentInventories__equipment_id', EquipmentInventories.rental_receive_detail_id AS 'EquipmentInventories__rental_receive_detail_id', EquipmentInventories.created AS 'EquipmentInventories__created', EquipmentInventories.modified AS 'EquipmentInventories__modified', Equipment.id AS 'Equipment__id', Equipment.name AS 'Equipment__name', Equipment.created AS 'Equipment__created', Equipment.modified AS 'Equipment__modified' FROM equipment_inventories EquipmentInventories INNER JOIN equipment Equipment ON Equipment.id = (EquipmentInventories.equipment_id) WHERE project_id = #id here#
	
Materials Summary Report
	SELECT MaterialsTaskInventories.material_id AS 'MaterialsTaskInventories__material_id', MaterialsTaskInventories.project_id AS 'MaterialsTaskInventories__project_id', MaterialsTaskInventories.task_id AS 'MaterialsTaskInventories__task_id', MaterialsTaskInventories.quantity AS 'MaterialsTaskInventories__quantity', MaterialsTaskInventories.created AS 'MaterialsTaskInventories__created', MaterialsTaskInventories.modified AS 'MaterialsTaskInventories__modified', Materials.id AS 'Materials__id', Materials.name AS 'Materials__name', Materials.unit_measure AS 'Materials__unit_measure', Materials.created AS 'Materials__created', Materials.modified AS 'Materials__modified' FROM materials_task_inventories MaterialsTaskInventories INNER JOIN materials Materials ON Materials.id = (MaterialsTaskInventories.material_id) WHERE project_id = #id here#

Manpower Summary Report
	fetch all milestones and tasks for a project
	use task id to get manpower
	
Select All Incident Report Headers
	SELECT IncidentReportHeaders.id AS 'IncidentReportHeaders__id', IncidentReportHeaders.project_id AS 'IncidentReportHeaders__project_id', IncidentReportHeaders.type AS 'IncidentReportHeaders__type', IncidentReportHeaders.project_engineer AS 'IncidentReportHeaders__project_engineer', IncidentReportHeaders.date AS 'IncidentReportHeaders__date', Projects.id AS 'Projects__id', Projects.client_id AS 'Projects__client_id', Projects.project_manager_id AS 'Projects__project_manager_id', Projects.title AS 'Projects__title', Projects.description AS 'Projects__description', Projects.location AS 'Projects__location', Projects.start_date AS 'Projects__start_date', Projects.end_date AS 'Projects__end_date', Projects.created AS 'Projects__created', Projects.modified AS 'Projects__modified', Projects.is_finished AS 'Projects__is_finished', Projects.phase AS 'Projects__phase' FROM incident_report_headers IncidentReportHeaders LEFT JOIN projects Projects ON Projects.id = (IncidentReportHeaders.project_id) LIMIT 20 OFFSET 0
	
Find By Incident Report Headers Id
	SELECT IncidentReportHeaders.id AS 'IncidentReportHeaders__id', IncidentReportHeaders.project_id AS 'IncidentReportHeaders__project_id', IncidentReportHeaders.type AS 'IncidentReportHeaders__type', IncidentReportHeaders.project_engineer AS 'IncidentReportHeaders__project_engineer', IncidentReportHeaders.date AS 'IncidentReportHeaders__date', Projects.id AS 'Projects__id', Projects.client_id AS 'Projects__client_id', Projects.project_manager_id AS 'Projects__project_manager_id', Projects.title AS 'Projects__title', Projects.description AS 'Projects__description', Projects.location AS 'Projects__location', Projects.start_date AS 'Projects__start_date', Projects.end_date AS 'Projects__end_date', Projects.created AS 'Projects__created', Projects.modified AS 'Projects__modified', Projects.is_finished AS 'Projects__is_finished', Projects.phase AS 'Projects__phase' FROM incident_report_headers IncidentReportHeaders LEFT JOIN projects Projects ON Projects.id = (IncidentReportHeaders.project_id) WHERE IncidentReportHeaders.id = #id here#
	*note fetch incident report details using incident report details id
	